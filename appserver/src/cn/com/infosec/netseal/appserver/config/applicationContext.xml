<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 注解扫面包路径 -->
	<context:component-scan base-package="cn.com.infosec.netseal" />
	<!-- 开启注解扫描 -->
	<context:annotation-config />
	<!-- 启动AspectJ支持 -->
	<aop:aspectj-autoproxy />

	<!--属性变量定义 -->
	<bean class="cn.com.infosec.netseal.common.config.NetSealPropertyHolderConfigurer">
		<property name="locations">
			<list>
				<!-- <value>file:/opt/infosec/NetSeal/conf/config.properties</value> -->
				<!--<value>file:E:/eclipseprj/source2016/NetSeal_v4/conf/config.properties</value>-->
				<value>file:F:\workspace\NetSeal\src\conf\config.properties</value> 
			</list> 
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="name" value="NetSeal" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大、取连接等待超时的时间 -->
		<property name="initialSize" value="${dataSource.initialSize}" />
		<property name="minIdle" value="${dataSource.minIdle}" />
		<property name="maxActive" value="${dataSource.maxActive}" />
		<property name="maxWait" value="${dataSource.maxWait}" />

		<!-- 配置检测连接时间点 -->
		<property name="testOnBorrow" value="${dataSource.testOnBorrow}" />
		<property name="testOnReturn" value="${dataSource.testOnReturn}" />
		<property name="testWhileIdle" value="${dataSource.testWhileIdle}" />

		<!--配置检测SQL、 配置间隔多久才进行一次检测 检测需要关闭的空闲连接、配置一个连接在池中最小生存的时间 单位是毫秒 -->
		<property name="validationQuery" value="${dataSource.validationQuery}" />
		<property name="timeBetweenEvictionRunsMillis" value="${dataSource.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${dataSource.minEvictableIdleTimeMillis}" />

		<!-- 打开removeAbandoned功能、超时时间 单位毫秒、连接时输出错误日志 -->
		<property name="removeAbandoned" value="${dataSource.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${dataSource.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${dataSource.logAbandoned}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${dataSource.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${dataSource.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 配置自动提交 -->
		<property name="defaultAutoCommit" value="${dataSource.defaultAutoCommit}" />

		<!-- 配置监控统计拦截的filters <property name="filters" value="wall,stat"/> -->
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 开启事务注解 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="selfListener" class="cn.com.infosec.netseal.appserver.listener.SocketListener">
		<property name="name" value="${listener.self.name}" />
		<property name="ip" value="${listener.self.ip}" />
		<property name="port" value="${listener.self.port}" />
		<property name="backlog" value="${listener.self.backlog}" />
		<property name="timeout" value="${listener.self.timeout}" />
	</bean>

	<bean id="businessListener" class="cn.com.infosec.netseal.appserver.listener.SocketListener">
		<property name="name" value="${listener.business.name}" />
		<property name="ip" value="${listener.business.ip}" />
		<property name="port" value="${listener.business.port}" />
		<property name="backlog" value="${listener.business.backlog}" />
		<property name="timeout" value="${listener.business.timeout}" />
		<property name="ssl" value="${listener.business.ssl}" />
		<property name="authClient" value="${listener.business.authClient}" />
		<property name="truststore" value="${listener.business.truststore}" />
		<property name="trustpwd" value="${listener.business.trustpwd}" />
		<property name="keystore" value="${listener.business.keystore}" />
		<property name="keypwd" value="${listener.business.keypwd}" />
	</bean>
	
	<bean id="envelopeListener" class="cn.com.infosec.netseal.appserver.listener.SocketEnvelopeListener">
		<property name="name" value="${listener.envelope.name}" />
		<property name="ip" value="${listener.envelope.ip}" />
		<property name="port" value="${listener.envelope.port}" />
		<property name="backlog" value="${listener.envelope.backlog}" />
		<property name="timeout" value="${listener.envelope.timeout}" />
		<property name="envelope" value="true" />
	</bean>

	<bean id="listenerManager" class="cn.com.infosec.netseal.appserver.manager.ListenerManager">
		<property name="list">
			<list>
				<ref bean="selfListener" />
				<ref bean="businessListener" />
				<ref bean="envelopeListener" />
			</list>
		</property>
	</bean>
</beans>